package routers

import (
	"github.com/astaxie/beego"
	"github.com/sirupsen/logrus"

	"cvevulner/cve-ddd/app"
	"cvevulner/cve-ddd/controller"
	"cvevulner/cve-ddd/infrastructure/backendimpl"
	"cvevulner/cve-ddd/infrastructure/bulletinimpl"
	"cvevulner/cve-ddd/infrastructure/hotpatchimpl"
	"cvevulner/cve-ddd/infrastructure/latestrpmimpl"
	"cvevulner/cve-ddd/infrastructure/majunimpl"
	"cvevulner/cve-ddd/infrastructure/obsimpl"
	"cvevulner/cve-ddd/infrastructure/repositoryimpl"
	"cvevulner/cve-ddd/infrastructure/testresultimpl"
	"cvevulner/cve-ddd/infrastructure/updateinfoimpl"
)

func Init() {
	initComment()
	initController()
	InitNewRouter()
}

func InitNewRouter() {
	logBulletin := logrus.New().WithField("module", "new-security-bulletin")
	logHotPatchBulletin := logrus.New().WithField("module", "new-hot-patch-security-bulletin")
	logColdPatchCveCollect := logrus.New().WithField("module", "new-cold-patch-cve-collect")

	coldPatchService := app.NewColdPatchService(
		latestrpmimpl.NewLatestRpm(),
		repositoryimpl.NewRepositoryImpl(),
		backendimpl.NewBackendImpl(),
		updateinfoimpl.NewUpdateInfoImpl(),
		obsimpl.Instance(),
		majunimpl.NewMajunImpl(),
		logColdPatchCveCollect,
	)

	bulletinService := app.NewBulletinService(
		obsimpl.Instance(),
		repositoryimpl.NewRepositoryImpl(),
		majunimpl.NewMajunImpl(),
		bulletinimpl.NewBulletinImpl(),
		testresultimpl.NewTestResultImpl(logBulletin),
		logBulletin,
	)

	hotPatchService := app.NewRefactorHotPatchService(
		repositoryimpl.NewRepositoryImpl(),
		bulletinimpl.NewBulletinImpl(),
		obsimpl.Instance(),
		updateinfoimpl.NewUpdateInfoImpl(),
		hotpatchimpl.NewHotPatchImpl(logHotPatchBulletin),
		logHotPatchBulletin,
	)

	NewCveController := controller.NewCveController(
		coldPatchService,
		bulletinService,
		hotPatchService,
		logHotPatchBulletin,
		logBulletin,
	)

	beego.Router("/security/bulletin/collect", NewCveController, "post:CollectCveData")
	beego.Router("/security/bulletin/generate", NewCveController, "post:Generate")
}
