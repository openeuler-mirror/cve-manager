package obsimpl

import (
	"bytes"
	"fmt"

	"github.com/astaxie/beego"
	"github.com/huaweicloud/huaweicloud-sdk-go-obs/obs"

	"cvevulner/util"
)

var instance *obsImpl

func Init() error {
	cfg := Config{
		AccessKey: beego.AppConfig.String("obs::access_key_id"),
		SecretKey: beego.AppConfig.String("obs::secret_access_key"),
		Endpoint:  beego.AppConfig.String("obs::endpoint"),
		Bucket:    beego.AppConfig.String("obs::bucket"),
		Directory: beego.AppConfig.String("obs::upload_cvrf_dir"),
	}

	cli, err := obs.New(cfg.AccessKey, cfg.SecretKey, cfg.Endpoint)
	if err != nil {
		return err
	}

	instance = &obsImpl{
		cfg: &cfg,
		cli: cli,
	}

	return nil
}

func Instance() *obsImpl {
	return instance
}

type obsImpl struct {
	cfg *Config
	cli *obs.ObsClient
}

func (impl obsImpl) Upload(fileName string, data []byte) error {
	input := &obs.PutObjectInput{}
	input.Bucket = impl.cfg.Bucket
	input.Key = fmt.Sprintf("%s%s/%s", impl.cfg.Directory, util.Date(), fileName)
	input.Body = bytes.NewReader(data)

	_, err := impl.cli.PutObject(input)

	return err
}
