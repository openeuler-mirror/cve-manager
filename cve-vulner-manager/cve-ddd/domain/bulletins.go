package domain

import (
	"fmt"
	"strings"

	"cvevulner/util"
)

const (
	BulletinTypeSA       = "SA"
	BulletinTypeBa       = "BA"
	BulletinTypeHotPatch = "HotPatchSA"
)

type SecurityBulletin struct {
	AffectedVersion []string
	Identification  string
	Date            string
	Component       string
	PatchUrl        []string    // use in hotpatch
	ProductTree     ProductTree // use in coldpatch
	Cves            Cves
}

type ProductTree = map[string][]Product

type Product struct {
	ID       string
	CPE      string
	FullName string
}

func (s *SecurityBulletin) SetIdentificationOfColdPatch(id int) {
	s.Identification = fmt.Sprintf("openEuler-SA-%d-%d", util.Year(), id)
}

func (s *SecurityBulletin) SetIdentificationOfHotPatch(id int) {
	s.Identification = fmt.Sprintf("openEuler-HotPatchSA-%d-%d", util.Year(), id)
}

func (s *SecurityBulletin) CvrfFileName() string {
	return fmt.Sprintf("cvrf-%s.xml", s.Identification)
}

func (s *SecurityBulletin) PathAppendToIndexFile() string {
	return fmt.Sprintf("%d/%s", util.Year(), s.CvrfFileName())
}

func (s *SecurityBulletin) IsColdPatch() bool {
	return !strings.Contains(s.Identification, BulletinTypeHotPatch)
}
